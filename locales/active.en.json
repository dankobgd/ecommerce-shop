{
  "api.admin_session_required.app_error": "insufficient permissions",
  "api.deleteUser.app_error": "invalid user_id url param",
  "api.order.create_order.json.app_error": "could not parse order item json data",
  "api.product.create_product.formfile.app_error": "error parsing files",
  "api.product.create_product.multipart.app_error": "could not decode product multipart data",
  "api.product.patch_product.app_error": "could not patch product",
  "api.product.url.params.app_error": "could not parse URL params",
  "api.resetUserPassword.password.app_error": "invalid password provided",
  "api.sendUserVerificationEmail.email.app_error": "invalid email provided",
  "api.user.create_user.json.app_error": "could not decode token json data",
  "app.extract_token_meta.app_error": "could not extract token meta data",
  "app.generate_tokens.app_error": "could not generate token",
  "app.product.create_product.formfile.app_error": "error parsing files",
  "app.product.create_product.image_size.app_error": "upload image size exceeded",
  "app.refresh_token.app_error": "could not delete old token",
  "app.templates.email.verify.body_text": "We got a request to reset your password, press the button bellow to reset it.",
  "app.templates.email.verify.button_text": "If you didn't request this, you can ignore this message and your password will remain unchanged.",
  "app.templates.email.verify.subject": "Password Recovery",
  "app.templates.email.verify.title": "Reset Your Password",
  "app.templates.email.verify.valid_for_text": {
    "one": "This password reset is only valid for the next {{ .Expiry }} hour",
    "other": "This password reset is only valid for the next {{ .Expiry }} hours."
  },
  "app.templates.email.verify.warning_text": "Reset Password",
  "app.templates.hello": "Hello",
  "app.templates.password.updated.body_text": "has been changed successfully!",
  "app.templates.password.updated.button_text": "Password Reset Completed",
  "app.templates.password.updated.subject": "Password for the account",
  "app.templates.password.updated.title": "Password Update Completed",
  "app.verify_token.app_error": "invalid token signin method",
  "cloudinary.dial.app_error": "could not connect to cloudinary service",
  "cloudinary.resource.details.app_error": "could not get resource details",
  "cloudinary.upload.image.app_error": "could not upload image",
  "mailer.parse_html2text.app_error": "could not parse email html to text",
  "mailer.parse_template.app_error": "could not parse email template",
  "mailer.send_sendgrid.app_error": "could not send email with sendgird",
  "mailer.send_smpt.app_error": "could not send email with smtp",
  "model.access_token_verify.json.app_error": "token is invalid or has already expired",
  "model.compare_password.app_error": "passwords don't match",
  "model.product.validate.app_error": "invalid product data",
  "model.product.validate.brand.app_error": "invalid product brand id",
  "model.product.validate.created_at.app_error": "invalid created_at timestamp",
  "model.product.validate.description.app_error": "invalid product description",
  "model.product.validate.id.app_error": "invalid product id",
  "model.product.validate.name.app_error": "invalid product name",
  "model.product.validate.price.app_error": "invalid product price",
  "model.product.validate.sku.app_error": "invalid product sku",
  "model.product.validate.slug.app_error": "invalid product slug",
  "model.product.validate.updated_at.app_error": "invalid updated_at timestamp",
  "model.product_brand.validate.app_error": "invalid brand data",
  "model.product_brand.validate.created_at.app_error": "invalid brand created_at timestamp",
  "model.product_brand.validate.description.app_error": "invalid brand description",
  "model.product_brand.validate.email.app_error": "invalid brand email",
  "model.product_brand.validate.id.app_error": "invalid brand id",
  "model.product_brand.validate.name.app_error": "invalid brand name",
  "model.product_brand.validate.product_id.app_error": "invalid brand product id",
  "model.product_brand.validate.slug.app_error": "invalid brand slug",
  "model.product_brand.validate.type.app_error": "invalid brand type",
  "model.product_brand.validate.updated_at.app_error": "invalid brand updated_at timestamp",
  "model.product_brand.validate.website_url.app_error": "invalid brand website URL",
  "model.product_category.validate.app_error": "invalid category data",
  "model.product_category.validate.created_at.app_error": "invalid category created_at timestamp",
  "model.product_category.validate.id.app_error": "invalid category id",
  "model.product_category.validate.name.app_error": "invalid category name",
  "model.product_category.validate.product_id.app_error": "invalid category product id",
  "model.product_category.validate.updated_at.app_error": "invalid category updated_at timestamp",
  "model.product_tag.validate.app_error": "invalid tag data",
  "model.product_tag.validate.created_at.app_error": "invalid tag created_at timestamp",
  "model.product_tag.validate.id.app_error": "invalid  tag id",
  "model.product_tag.validate.name.app_error": "invalid tag name",
  "model.product_tag.validate.product_id.app_error": "invalid tag product id",
  "model.product_tag.validate.updated_at.app_error": "invalid tag updated_at timestamp",
  "model.token.expired.app_error": "token has expired",
  "model.token.validate.app_error": "invalid token",
  "model.token.validate.expired.app_error": "token has expired",
  "model.user.validate.app_error": "invalid user data",
  "model.user.validate.confirm_password.app_error": "invalid confirm password",
  "model.user.validate.created_at.app_error": "invalid created_at timestamp",
  "model.user.validate.email.app_error": "invalid email",
  "model.user.validate.first_name.app_error": "invalid first name",
  "model.user.validate.id.app_error": "uppercase letter required",
  "model.user.validate.last_name.app_error": "invalid last name",
  "model.user.validate.locale.app_error": "invalid locale",
  "model.user.validate.password.app_error": "invalid password",
  "model.user.validate.password_length.app_error": "invalid password length",
  "model.user.validate.password_lowercase.app_error": "lowercase letter required",
  "model.user.validate.password_numbers.app_error": "number required",
  "model.user.validate.password_symbols.app_error": "symbol required",
  "model.user.validate.password_uppercase.app_error": "uppercase letter required",
  "model.user.validate.updated_at.app_error": "invalid updated_at timestamp",
  "model.user.validate.username.app_error": "invalid username",
  "store.postgres.order.get.app_error": "could not get order",
  "store.postgres.order.save.app_error": "could not save order",
  "store.postgres.order.update.app_error": "could not update order",
  "store.postgres.order_detail.bulk_insert.app_error": "could not bulk insert order details",
  "store.postgres.order_detail.create.app_error": "could not create order detail",
  "store.postgres.order_detail.get.app_error": "could not get order detail",
  "store.postgres.product.bulk_insert.app_error": "could not bulk insert products",
  "store.postgres.product.delete.app_error": "could not delete product",
  "store.postgres.product.get.app_error": "could not get product",
  "store.postgres.product.get_all.app_error": "could not get products",
  "store.postgres.product.save.app_error": "could not save product, invalid column name",
  "store.postgres.product.update.app_error": "could not update product",
  "store.postgres.product_image.bulk_insert.app_error": "could not bulk insert product images",
  "store.postgres.product_image.delete.app_error": "could not delete product image",
  "store.postgres.product_image.get.app_error": "could not get product image",
  "store.postgres.product_image.get_all.app_error": "could not get product images",
  "store.postgres.product_image.update.app_error": "could not update product image",
  "store.postgres.product_tag.bulk_insert.app_error": "could not bulk insert product tags",
  "store.postgres.product_tag.delete.app_error": "could not delete product tag",
  "store.postgres.product_tag.get.app_error": "could not get product tag",
  "store.postgres.product_tag.get_all.app_error": "could not get product tags",
  "store.postgres.product_tag.update.app_error": "could not update product tag",
  "store.postgres.token.RemoveAllTokensByType.app_error": "could not remove all tokens by type",
  "store.postgres.token.cleanup.app_error": "could not cleanup all tokens",
  "store.postgres.token.get_by_token.app_error": "could not get token",
  "store.postgres.token.save.app_error": "could not save token",
  "store.postgres.user.bulk.insert.app_error": "could not bulk insert users",
  "store.postgres.user.delete.app_error": "could not delete user",
  "store.postgres.user.get.app_error": "could not get the user",
  "store.postgres.user.save.app_error": "could not save user",
  "store.postgres.user.save.unique_constraint.app_error": "invalid credentials",
  "store.postgres.user.update_password.app_error": "could not update password",
  "store.postgres.user.verify_email.app_error": "could not verify email",
  "store.postgres.user.verify_email.delete_token.app_error": "could not delete verify token",
  "store.redis.access_token.delete_auth.app_error": "could not delete auth data",
  "store.redis.access_token.get_auth.app_error": "auth token is invalid or has already expired",
  "store.redis.access_token.save_auth.app_error": "could not save auth data"
}